CREATE TABLE roles (
  id SERIAL UNIQUE,
  name VARCHAR(20) NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
  PRIMARY KEY (id)
);

-- Insert `ADMIN` and `READ` roles.
INSERT INTO roles (name) VALUES ('ADMIN');
INSERT INTO roles (name) VALUES ('READ');

CREATE TABLE countries (
  id SERIAL UNIQUE,
  name VARCHAR(50) NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
  deleted BOOLEAN DEFAULT FALSE NOT NULL
);

CREATE TABLE addresses (
  id SERIAL UNIQUE,
  name VARCHAR(100) NOT NULL,
  country_id INTEGER NOT NULL,
  city VARCHAR(50) NOT NULL,
  state VARCHAR(50) NOT NULL,
  code VARCHAR(20) NOT NULL,
  geolocation POINT,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
  deleted BOOLEAN DEFAULT FALSE NOT NULL,
  PRIMARY KEY (id),
  CONSTRAINT fk_country_id FOREIGN KEY (country_id) REFERENCES countries(id)
);

CREATE TABLE users (
  id SERIAL UNIQUE,
  username VARCHAR(50) UNIQUE NOT NULL,
  email VARCHAR(50) UNIQUE NOT NULL,
  name VARCHAR(50) NOT NULL,
  birthdate DATE,
  address_id INTEGER,
  verified BOOLEAN DEFAULT FALSE NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
  deleted BOOLEAN DEFAULT FALSE NOT NULL,
  PRIMARY KEY (id, username),
  CONSTRAINT fk_address_id FOREIGN KEY (address_id) REFERENCES addresses(id)
);

CREATE TABLE sign_in_counter (
  id SERIAL,
  user_id INTEGER NOT NULL,
  count INTEGER DEFAULT 0 NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
  PRIMARY KEY (id, user_id),
  CONSTRAINT fk_user_id FOREIGN KEY (user_id) REFERENCES users(id)
);

CREATE TABLE vendors (
  id SERIAL UNIQUE,
  user_id INTEGER NOT NULL,
  name VARCHAR(50) NOT NULL,
  description VARCHAR(255),
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
  deleted BOOLEAN DEFAULT FALSE NOT NULL,
  PRIMARY KEY (id),
  CONSTRAINT fk_user_id FOREIGN KEY (user_id) REFERENCES users(id)
);

CREATE TABLE stores (
  id SERIAL UNIQUE,
  name VARCHAR(50) NOT NULL,
  description VARCHAR(255),
  url_name VARCHAR(50),
  created_by INTEGER NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
  deleted BOOLEAN DEFAULT FALSE NOT NULL,
  PRIMARY KEY (id),
  CONSTRAINT fk_created_by FOREIGN KEY (created_by) REFERENCES users(id)
);

CREATE TABLE stores__followers (
  store_id INTEGER NOT NULL,
  user_id INTEGER NOT NULL,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
  PRIMARY KEY (store_id, user_id),
  CONSTRAINT fk_store_id FOREIGN KEY (store_id) REFERENCES stores(id),
  CONSTRAINT fk_user_id FOREIGN KEY (user_id) REFERENCES users(id)
);

CREATE TABLE vendors__stores (
  vendor_id INTEGER NOT NULL,
  store_id INTEGER NOT NULL,
  role_id INTEGER NOT NULL,
  PRIMARY KEY (vendor_id, store_id),
  CONSTRAINT fk_vendor_id FOREIGN KEY (vendor_id) REFERENCES vendors(id),
  CONSTRAINT fk_store_id FOREIGN KEY (store_id) REFERENCES stores(id),
  CONSTRAINT fk_role_id FOREIGN KEY (role_id) REFERENCES roles(id)
);